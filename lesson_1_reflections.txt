Git commands learnt :
-git clone
-git log
-git diff
-git checkout


How did viewing a diff between two versions of a file help you see the bug that was introduced?

The first file is running correctly but the second one is not while it should be because you think you didn't change 
what was working previously, a diff will show you what has changed by mistake.


How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

If you stop programming for a while or if someone else is working with you, they see what progress you've done and
what next has to be done.


What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having
versions automatically saved, like Google docs does?

Every commit makes sense but you could forget to commit sometimes or wait to long.


Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, 
like google docs, treat each file separately?

Because the files in programming are related.


How can you use the commands git log and git diff to view the history of the files?

Compare the commit IDs thanks to the command line "git diff commitID1 commitID2".


How might using version control make you more confident to make changes that could break something?

Because you can go back to a previous version using "git checkout commitID"


Now that you have your workspace set up, what do you want to try using Git for?

Programming.